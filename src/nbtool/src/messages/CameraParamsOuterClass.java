// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CameraParams.proto

package messages;

public final class CameraParamsOuterClass {
  private CameraParamsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CameraParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:messages.CameraParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string whichCamera = 1;</code>
     */
    boolean hasWhichCamera();
    /**
     * <code>optional string whichCamera = 1;</code>
     */
    java.lang.String getWhichCamera();
    /**
     * <code>optional string whichCamera = 1;</code>
     */
    com.google.protobuf.ByteString
        getWhichCameraBytes();

    /**
     * <code>optional int32 H_FLIP = 2;</code>
     */
    boolean hasHFLIP();
    /**
     * <code>optional int32 H_FLIP = 2;</code>
     */
    int getHFLIP();

    /**
     * <code>optional int32 V_FLIP = 3;</code>
     */
    boolean hasVFLIP();
    /**
     * <code>optional int32 V_FLIP = 3;</code>
     */
    int getVFLIP();

    /**
     * <code>optional int32 autoExposure = 4;</code>
     */
    boolean hasAutoExposure();
    /**
     * <code>optional int32 autoExposure = 4;</code>
     */
    int getAutoExposure();

    /**
     * <code>optional int32 brightness = 5;</code>
     */
    boolean hasBrightness();
    /**
     * <code>optional int32 brightness = 5;</code>
     */
    int getBrightness();

    /**
     * <code>optional int32 contrast = 6;</code>
     */
    boolean hasContrast();
    /**
     * <code>optional int32 contrast = 6;</code>
     */
    int getContrast();

    /**
     * <code>optional int32 saturation = 7;</code>
     */
    boolean hasSaturation();
    /**
     * <code>optional int32 saturation = 7;</code>
     */
    int getSaturation();

    /**
     * <code>optional int32 hue = 8;</code>
     */
    boolean hasHue();
    /**
     * <code>optional int32 hue = 8;</code>
     */
    int getHue();

    /**
     * <code>optional int32 sharpness = 9;</code>
     */
    boolean hasSharpness();
    /**
     * <code>optional int32 sharpness = 9;</code>
     */
    int getSharpness();

    /**
     * <code>optional int32 gamma = 10;</code>
     */
    boolean hasGamma();
    /**
     * <code>optional int32 gamma = 10;</code>
     */
    int getGamma();

    /**
     * <code>optional int32 autoWhiteBalance = 11;</code>
     */
    boolean hasAutoWhiteBalance();
    /**
     * <code>optional int32 autoWhiteBalance = 11;</code>
     */
    int getAutoWhiteBalance();

    /**
     * <code>optional int32 exposure = 12;</code>
     */
    boolean hasExposure();
    /**
     * <code>optional int32 exposure = 12;</code>
     */
    int getExposure();

    /**
     * <code>optional int32 gain = 13;</code>
     */
    boolean hasGain();
    /**
     * <code>optional int32 gain = 13;</code>
     */
    int getGain();

    /**
     * <code>optional int32 whiteBalance = 14;</code>
     */
    boolean hasWhiteBalance();
    /**
     * <code>optional int32 whiteBalance = 14;</code>
     */
    int getWhiteBalance();

    /**
     * <code>optional int32 fadeToBlack = 15;</code>
     */
    boolean hasFadeToBlack();
    /**
     * <code>optional int32 fadeToBlack = 15;</code>
     */
    int getFadeToBlack();
  }
  /**
   * Protobuf type {@code messages.CameraParams}
   */
  public static final class CameraParams extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:messages.CameraParams)
      CameraParamsOrBuilder {
    // Use CameraParams.newBuilder() to construct.
    private CameraParams(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CameraParams(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CameraParams defaultInstance;
    public static CameraParams getDefaultInstance() {
      return defaultInstance;
    }

    public CameraParams getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CameraParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              whichCamera_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hFLIP_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vFLIP_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              autoExposure_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              brightness_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              contrast_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              saturation_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              hue_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sharpness_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              gamma_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              autoWhiteBalance_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              exposure_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              gain_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              whiteBalance_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              fadeToBlack_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return messages.CameraParamsOuterClass.internal_static_messages_CameraParams_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return messages.CameraParamsOuterClass.internal_static_messages_CameraParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              messages.CameraParamsOuterClass.CameraParams.class, messages.CameraParamsOuterClass.CameraParams.Builder.class);
    }

    public static com.google.protobuf.Parser<CameraParams> PARSER =
        new com.google.protobuf.AbstractParser<CameraParams>() {
      public CameraParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CameraParams(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CameraParams> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int WHICHCAMERA_FIELD_NUMBER = 1;
    private java.lang.Object whichCamera_;
    /**
     * <code>optional string whichCamera = 1;</code>
     */
    public boolean hasWhichCamera() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string whichCamera = 1;</code>
     */
    public java.lang.String getWhichCamera() {
      java.lang.Object ref = whichCamera_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          whichCamera_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string whichCamera = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWhichCameraBytes() {
      java.lang.Object ref = whichCamera_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        whichCamera_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int H_FLIP_FIELD_NUMBER = 2;
    private int hFLIP_;
    /**
     * <code>optional int32 H_FLIP = 2;</code>
     */
    public boolean hasHFLIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 H_FLIP = 2;</code>
     */
    public int getHFLIP() {
      return hFLIP_;
    }

    public static final int V_FLIP_FIELD_NUMBER = 3;
    private int vFLIP_;
    /**
     * <code>optional int32 V_FLIP = 3;</code>
     */
    public boolean hasVFLIP() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 V_FLIP = 3;</code>
     */
    public int getVFLIP() {
      return vFLIP_;
    }

    public static final int AUTOEXPOSURE_FIELD_NUMBER = 4;
    private int autoExposure_;
    /**
     * <code>optional int32 autoExposure = 4;</code>
     */
    public boolean hasAutoExposure() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 autoExposure = 4;</code>
     */
    public int getAutoExposure() {
      return autoExposure_;
    }

    public static final int BRIGHTNESS_FIELD_NUMBER = 5;
    private int brightness_;
    /**
     * <code>optional int32 brightness = 5;</code>
     */
    public boolean hasBrightness() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 brightness = 5;</code>
     */
    public int getBrightness() {
      return brightness_;
    }

    public static final int CONTRAST_FIELD_NUMBER = 6;
    private int contrast_;
    /**
     * <code>optional int32 contrast = 6;</code>
     */
    public boolean hasContrast() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 contrast = 6;</code>
     */
    public int getContrast() {
      return contrast_;
    }

    public static final int SATURATION_FIELD_NUMBER = 7;
    private int saturation_;
    /**
     * <code>optional int32 saturation = 7;</code>
     */
    public boolean hasSaturation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 saturation = 7;</code>
     */
    public int getSaturation() {
      return saturation_;
    }

    public static final int HUE_FIELD_NUMBER = 8;
    private int hue_;
    /**
     * <code>optional int32 hue = 8;</code>
     */
    public boolean hasHue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 hue = 8;</code>
     */
    public int getHue() {
      return hue_;
    }

    public static final int SHARPNESS_FIELD_NUMBER = 9;
    private int sharpness_;
    /**
     * <code>optional int32 sharpness = 9;</code>
     */
    public boolean hasSharpness() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 sharpness = 9;</code>
     */
    public int getSharpness() {
      return sharpness_;
    }

    public static final int GAMMA_FIELD_NUMBER = 10;
    private int gamma_;
    /**
     * <code>optional int32 gamma = 10;</code>
     */
    public boolean hasGamma() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 gamma = 10;</code>
     */
    public int getGamma() {
      return gamma_;
    }

    public static final int AUTOWHITEBALANCE_FIELD_NUMBER = 11;
    private int autoWhiteBalance_;
    /**
     * <code>optional int32 autoWhiteBalance = 11;</code>
     */
    public boolean hasAutoWhiteBalance() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 autoWhiteBalance = 11;</code>
     */
    public int getAutoWhiteBalance() {
      return autoWhiteBalance_;
    }

    public static final int EXPOSURE_FIELD_NUMBER = 12;
    private int exposure_;
    /**
     * <code>optional int32 exposure = 12;</code>
     */
    public boolean hasExposure() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 exposure = 12;</code>
     */
    public int getExposure() {
      return exposure_;
    }

    public static final int GAIN_FIELD_NUMBER = 13;
    private int gain_;
    /**
     * <code>optional int32 gain = 13;</code>
     */
    public boolean hasGain() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 gain = 13;</code>
     */
    public int getGain() {
      return gain_;
    }

    public static final int WHITEBALANCE_FIELD_NUMBER = 14;
    private int whiteBalance_;
    /**
     * <code>optional int32 whiteBalance = 14;</code>
     */
    public boolean hasWhiteBalance() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 whiteBalance = 14;</code>
     */
    public int getWhiteBalance() {
      return whiteBalance_;
    }

    public static final int FADETOBLACK_FIELD_NUMBER = 15;
    private int fadeToBlack_;
    /**
     * <code>optional int32 fadeToBlack = 15;</code>
     */
    public boolean hasFadeToBlack() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 fadeToBlack = 15;</code>
     */
    public int getFadeToBlack() {
      return fadeToBlack_;
    }

    private void initFields() {
      whichCamera_ = "";
      hFLIP_ = 0;
      vFLIP_ = 0;
      autoExposure_ = 0;
      brightness_ = 0;
      contrast_ = 0;
      saturation_ = 0;
      hue_ = 0;
      sharpness_ = 0;
      gamma_ = 0;
      autoWhiteBalance_ = 0;
      exposure_ = 0;
      gain_ = 0;
      whiteBalance_ = 0;
      fadeToBlack_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWhichCameraBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, hFLIP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, vFLIP_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, autoExposure_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, brightness_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, contrast_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, saturation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, hue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, sharpness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, gamma_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, autoWhiteBalance_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, exposure_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, gain_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, whiteBalance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, fadeToBlack_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWhichCameraBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hFLIP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, vFLIP_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, autoExposure_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, brightness_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, contrast_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, saturation_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, hue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sharpness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, gamma_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, autoWhiteBalance_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, exposure_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, gain_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, whiteBalance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, fadeToBlack_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static messages.CameraParamsOuterClass.CameraParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static messages.CameraParamsOuterClass.CameraParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(messages.CameraParamsOuterClass.CameraParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code messages.CameraParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:messages.CameraParams)
        messages.CameraParamsOuterClass.CameraParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return messages.CameraParamsOuterClass.internal_static_messages_CameraParams_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return messages.CameraParamsOuterClass.internal_static_messages_CameraParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                messages.CameraParamsOuterClass.CameraParams.class, messages.CameraParamsOuterClass.CameraParams.Builder.class);
      }

      // Construct using messages.CameraParamsOuterClass.CameraParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        whichCamera_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        hFLIP_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        vFLIP_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        autoExposure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        brightness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        contrast_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        saturation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        hue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sharpness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        gamma_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        autoWhiteBalance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        exposure_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        gain_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        whiteBalance_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        fadeToBlack_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return messages.CameraParamsOuterClass.internal_static_messages_CameraParams_descriptor;
      }

      public messages.CameraParamsOuterClass.CameraParams getDefaultInstanceForType() {
        return messages.CameraParamsOuterClass.CameraParams.getDefaultInstance();
      }

      public messages.CameraParamsOuterClass.CameraParams build() {
        messages.CameraParamsOuterClass.CameraParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public messages.CameraParamsOuterClass.CameraParams buildPartial() {
        messages.CameraParamsOuterClass.CameraParams result = new messages.CameraParamsOuterClass.CameraParams(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.whichCamera_ = whichCamera_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hFLIP_ = hFLIP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vFLIP_ = vFLIP_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.autoExposure_ = autoExposure_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.brightness_ = brightness_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.contrast_ = contrast_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.saturation_ = saturation_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.hue_ = hue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sharpness_ = sharpness_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.gamma_ = gamma_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.autoWhiteBalance_ = autoWhiteBalance_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.exposure_ = exposure_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.gain_ = gain_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.whiteBalance_ = whiteBalance_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fadeToBlack_ = fadeToBlack_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof messages.CameraParamsOuterClass.CameraParams) {
          return mergeFrom((messages.CameraParamsOuterClass.CameraParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(messages.CameraParamsOuterClass.CameraParams other) {
        if (other == messages.CameraParamsOuterClass.CameraParams.getDefaultInstance()) return this;
        if (other.hasWhichCamera()) {
          bitField0_ |= 0x00000001;
          whichCamera_ = other.whichCamera_;
          onChanged();
        }
        if (other.hasHFLIP()) {
          setHFLIP(other.getHFLIP());
        }
        if (other.hasVFLIP()) {
          setVFLIP(other.getVFLIP());
        }
        if (other.hasAutoExposure()) {
          setAutoExposure(other.getAutoExposure());
        }
        if (other.hasBrightness()) {
          setBrightness(other.getBrightness());
        }
        if (other.hasContrast()) {
          setContrast(other.getContrast());
        }
        if (other.hasSaturation()) {
          setSaturation(other.getSaturation());
        }
        if (other.hasHue()) {
          setHue(other.getHue());
        }
        if (other.hasSharpness()) {
          setSharpness(other.getSharpness());
        }
        if (other.hasGamma()) {
          setGamma(other.getGamma());
        }
        if (other.hasAutoWhiteBalance()) {
          setAutoWhiteBalance(other.getAutoWhiteBalance());
        }
        if (other.hasExposure()) {
          setExposure(other.getExposure());
        }
        if (other.hasGain()) {
          setGain(other.getGain());
        }
        if (other.hasWhiteBalance()) {
          setWhiteBalance(other.getWhiteBalance());
        }
        if (other.hasFadeToBlack()) {
          setFadeToBlack(other.getFadeToBlack());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        messages.CameraParamsOuterClass.CameraParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (messages.CameraParamsOuterClass.CameraParams) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object whichCamera_ = "";
      /**
       * <code>optional string whichCamera = 1;</code>
       */
      public boolean hasWhichCamera() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string whichCamera = 1;</code>
       */
      public java.lang.String getWhichCamera() {
        java.lang.Object ref = whichCamera_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            whichCamera_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string whichCamera = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWhichCameraBytes() {
        java.lang.Object ref = whichCamera_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          whichCamera_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string whichCamera = 1;</code>
       */
      public Builder setWhichCamera(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        whichCamera_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string whichCamera = 1;</code>
       */
      public Builder clearWhichCamera() {
        bitField0_ = (bitField0_ & ~0x00000001);
        whichCamera_ = getDefaultInstance().getWhichCamera();
        onChanged();
        return this;
      }
      /**
       * <code>optional string whichCamera = 1;</code>
       */
      public Builder setWhichCameraBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        whichCamera_ = value;
        onChanged();
        return this;
      }

      private int hFLIP_ ;
      /**
       * <code>optional int32 H_FLIP = 2;</code>
       */
      public boolean hasHFLIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 H_FLIP = 2;</code>
       */
      public int getHFLIP() {
        return hFLIP_;
      }
      /**
       * <code>optional int32 H_FLIP = 2;</code>
       */
      public Builder setHFLIP(int value) {
        bitField0_ |= 0x00000002;
        hFLIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 H_FLIP = 2;</code>
       */
      public Builder clearHFLIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hFLIP_ = 0;
        onChanged();
        return this;
      }

      private int vFLIP_ ;
      /**
       * <code>optional int32 V_FLIP = 3;</code>
       */
      public boolean hasVFLIP() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 V_FLIP = 3;</code>
       */
      public int getVFLIP() {
        return vFLIP_;
      }
      /**
       * <code>optional int32 V_FLIP = 3;</code>
       */
      public Builder setVFLIP(int value) {
        bitField0_ |= 0x00000004;
        vFLIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 V_FLIP = 3;</code>
       */
      public Builder clearVFLIP() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vFLIP_ = 0;
        onChanged();
        return this;
      }

      private int autoExposure_ ;
      /**
       * <code>optional int32 autoExposure = 4;</code>
       */
      public boolean hasAutoExposure() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 autoExposure = 4;</code>
       */
      public int getAutoExposure() {
        return autoExposure_;
      }
      /**
       * <code>optional int32 autoExposure = 4;</code>
       */
      public Builder setAutoExposure(int value) {
        bitField0_ |= 0x00000008;
        autoExposure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 autoExposure = 4;</code>
       */
      public Builder clearAutoExposure() {
        bitField0_ = (bitField0_ & ~0x00000008);
        autoExposure_ = 0;
        onChanged();
        return this;
      }

      private int brightness_ ;
      /**
       * <code>optional int32 brightness = 5;</code>
       */
      public boolean hasBrightness() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 brightness = 5;</code>
       */
      public int getBrightness() {
        return brightness_;
      }
      /**
       * <code>optional int32 brightness = 5;</code>
       */
      public Builder setBrightness(int value) {
        bitField0_ |= 0x00000010;
        brightness_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 brightness = 5;</code>
       */
      public Builder clearBrightness() {
        bitField0_ = (bitField0_ & ~0x00000010);
        brightness_ = 0;
        onChanged();
        return this;
      }

      private int contrast_ ;
      /**
       * <code>optional int32 contrast = 6;</code>
       */
      public boolean hasContrast() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 contrast = 6;</code>
       */
      public int getContrast() {
        return contrast_;
      }
      /**
       * <code>optional int32 contrast = 6;</code>
       */
      public Builder setContrast(int value) {
        bitField0_ |= 0x00000020;
        contrast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 contrast = 6;</code>
       */
      public Builder clearContrast() {
        bitField0_ = (bitField0_ & ~0x00000020);
        contrast_ = 0;
        onChanged();
        return this;
      }

      private int saturation_ ;
      /**
       * <code>optional int32 saturation = 7;</code>
       */
      public boolean hasSaturation() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 saturation = 7;</code>
       */
      public int getSaturation() {
        return saturation_;
      }
      /**
       * <code>optional int32 saturation = 7;</code>
       */
      public Builder setSaturation(int value) {
        bitField0_ |= 0x00000040;
        saturation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 saturation = 7;</code>
       */
      public Builder clearSaturation() {
        bitField0_ = (bitField0_ & ~0x00000040);
        saturation_ = 0;
        onChanged();
        return this;
      }

      private int hue_ ;
      /**
       * <code>optional int32 hue = 8;</code>
       */
      public boolean hasHue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 hue = 8;</code>
       */
      public int getHue() {
        return hue_;
      }
      /**
       * <code>optional int32 hue = 8;</code>
       */
      public Builder setHue(int value) {
        bitField0_ |= 0x00000080;
        hue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hue = 8;</code>
       */
      public Builder clearHue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hue_ = 0;
        onChanged();
        return this;
      }

      private int sharpness_ ;
      /**
       * <code>optional int32 sharpness = 9;</code>
       */
      public boolean hasSharpness() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 sharpness = 9;</code>
       */
      public int getSharpness() {
        return sharpness_;
      }
      /**
       * <code>optional int32 sharpness = 9;</code>
       */
      public Builder setSharpness(int value) {
        bitField0_ |= 0x00000100;
        sharpness_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sharpness = 9;</code>
       */
      public Builder clearSharpness() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sharpness_ = 0;
        onChanged();
        return this;
      }

      private int gamma_ ;
      /**
       * <code>optional int32 gamma = 10;</code>
       */
      public boolean hasGamma() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 gamma = 10;</code>
       */
      public int getGamma() {
        return gamma_;
      }
      /**
       * <code>optional int32 gamma = 10;</code>
       */
      public Builder setGamma(int value) {
        bitField0_ |= 0x00000200;
        gamma_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gamma = 10;</code>
       */
      public Builder clearGamma() {
        bitField0_ = (bitField0_ & ~0x00000200);
        gamma_ = 0;
        onChanged();
        return this;
      }

      private int autoWhiteBalance_ ;
      /**
       * <code>optional int32 autoWhiteBalance = 11;</code>
       */
      public boolean hasAutoWhiteBalance() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 autoWhiteBalance = 11;</code>
       */
      public int getAutoWhiteBalance() {
        return autoWhiteBalance_;
      }
      /**
       * <code>optional int32 autoWhiteBalance = 11;</code>
       */
      public Builder setAutoWhiteBalance(int value) {
        bitField0_ |= 0x00000400;
        autoWhiteBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 autoWhiteBalance = 11;</code>
       */
      public Builder clearAutoWhiteBalance() {
        bitField0_ = (bitField0_ & ~0x00000400);
        autoWhiteBalance_ = 0;
        onChanged();
        return this;
      }

      private int exposure_ ;
      /**
       * <code>optional int32 exposure = 12;</code>
       */
      public boolean hasExposure() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 exposure = 12;</code>
       */
      public int getExposure() {
        return exposure_;
      }
      /**
       * <code>optional int32 exposure = 12;</code>
       */
      public Builder setExposure(int value) {
        bitField0_ |= 0x00000800;
        exposure_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 exposure = 12;</code>
       */
      public Builder clearExposure() {
        bitField0_ = (bitField0_ & ~0x00000800);
        exposure_ = 0;
        onChanged();
        return this;
      }

      private int gain_ ;
      /**
       * <code>optional int32 gain = 13;</code>
       */
      public boolean hasGain() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 gain = 13;</code>
       */
      public int getGain() {
        return gain_;
      }
      /**
       * <code>optional int32 gain = 13;</code>
       */
      public Builder setGain(int value) {
        bitField0_ |= 0x00001000;
        gain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gain = 13;</code>
       */
      public Builder clearGain() {
        bitField0_ = (bitField0_ & ~0x00001000);
        gain_ = 0;
        onChanged();
        return this;
      }

      private int whiteBalance_ ;
      /**
       * <code>optional int32 whiteBalance = 14;</code>
       */
      public boolean hasWhiteBalance() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 whiteBalance = 14;</code>
       */
      public int getWhiteBalance() {
        return whiteBalance_;
      }
      /**
       * <code>optional int32 whiteBalance = 14;</code>
       */
      public Builder setWhiteBalance(int value) {
        bitField0_ |= 0x00002000;
        whiteBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 whiteBalance = 14;</code>
       */
      public Builder clearWhiteBalance() {
        bitField0_ = (bitField0_ & ~0x00002000);
        whiteBalance_ = 0;
        onChanged();
        return this;
      }

      private int fadeToBlack_ ;
      /**
       * <code>optional int32 fadeToBlack = 15;</code>
       */
      public boolean hasFadeToBlack() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 fadeToBlack = 15;</code>
       */
      public int getFadeToBlack() {
        return fadeToBlack_;
      }
      /**
       * <code>optional int32 fadeToBlack = 15;</code>
       */
      public Builder setFadeToBlack(int value) {
        bitField0_ |= 0x00004000;
        fadeToBlack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fadeToBlack = 15;</code>
       */
      public Builder clearFadeToBlack() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fadeToBlack_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:messages.CameraParams)
    }

    static {
      defaultInstance = new CameraParams(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:messages.CameraParams)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_messages_CameraParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_messages_CameraParams_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022CameraParams.proto\022\010messages\"\247\002\n\014Camer" +
      "aParams\022\023\n\013whichCamera\030\001 \001(\t\022\016\n\006H_FLIP\030\002" +
      " \001(\005\022\016\n\006V_FLIP\030\003 \001(\005\022\024\n\014autoExposure\030\004 \001" +
      "(\005\022\022\n\nbrightness\030\005 \001(\005\022\020\n\010contrast\030\006 \001(\005" +
      "\022\022\n\nsaturation\030\007 \001(\005\022\013\n\003hue\030\010 \001(\005\022\021\n\tsha" +
      "rpness\030\t \001(\005\022\r\n\005gamma\030\n \001(\005\022\030\n\020autoWhite" +
      "Balance\030\013 \001(\005\022\020\n\010exposure\030\014 \001(\005\022\014\n\004gain\030" +
      "\r \001(\005\022\024\n\014whiteBalance\030\016 \001(\005\022\023\n\013fadeToBla" +
      "ck\030\017 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_messages_CameraParams_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_messages_CameraParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_messages_CameraParams_descriptor,
        new java.lang.String[] { "WhichCamera", "HFLIP", "VFLIP", "AutoExposure", "Brightness", "Contrast", "Saturation", "Hue", "Sharpness", "Gamma", "AutoWhiteBalance", "Exposure", "Gain", "WhiteBalance", "FadeToBlack", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
